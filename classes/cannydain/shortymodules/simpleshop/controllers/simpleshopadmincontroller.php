<?php

namespace CannyDain\ShortyModules\SimpleShop\Controllers;

use CannyDain\Lib\Routing\Models\Route;
use CannyDain\Lib\UI\Views\RedirectView;
use CannyDain\Shorty\Controllers\ShortyModuleController;
use CannyDain\Shorty\RouteAccessControl\RouteAccessControlInterface;
use CannyDain\ShortyModules\SimpleShop\SimpleShopModule;
use CannyDain\ShortyModules\SimpleShop\Views\EditProductView;
use CannyDain\ShortyModules\SimpleShop\Views\ProductAdminListView;
use CannyDain\ShortyModules\SimpleShop\Views\ProductListView;
use CannyDain\ShortyModules\SimpleShop\Views\SingleProductView;

class SimpleShopAdminController extends ShortyModuleController
{
    public function getDefaultMinimumAccessLevel()
    {
        return RouteAccessControlInterface::ACCESS_LEVEL_ADMIN;
    }

    public function Index()
    {
        $view = new ProductAdminListView();
        $view->setViewProductRouteTemplate(new Route(SimpleShopController::SIMPLE_SHOP_CONTROLLER, 'ViewProduct', array('#id#')));
        $view->setEditProductRouteTemplate(new Route(__CLASS__, 'EditProduct', array('#id#')));
        $view->setCreateProductRoute(new Route(__CLASS__, 'CreateProduct'));

        $view->setTitle('All Products');
        $view->setProducts($this->_getModule()->getDatasource()->getAllProducts());

        return $view;
    }

    public function CreateProduct()
    {
        $product = $this->_getModule()->getDatasource()->createProduct();
        $view = new EditProductView();

        $view->setProduct($product);
        $view->setPostRoute(new Route(__CLASS__, 'CreateProduct'));
        $this->_dependencies->applyDependencies($view);

        if ($view->updateFromPostAndReturnTrueIfPostedAndValid())
        {
            $this->_getModule()->getDatasource()->saveProduct($view->getProduct());
            return new RedirectView($this->_router->getURI(new Route(__CLASS__)));
        }

        return $view;
    }

    public function EditProduct($id)
    {
        $product = $this->_getModule()->getDatasource()->loadProduct($id);
        $view = new EditProductView();

        $view->setProduct($product);
        $view->setPostRoute(new Route(__CLASS__, 'EditProduct', array($id)));
        $this->_dependencies->applyDependencies($view);

        if ($view->updateFromPostAndReturnTrueIfPostedAndValid())
        {
            $this->_getModule()->getDatasource()->saveProduct($view->getProduct());
            return new RedirectView($this->_router->getURI(new Route(__CLASS__)));
        }

        return $view;
    }

    protected function _getModuleClassname()
    {
        return SimpleShopModule::SIMPLE_SHOP_MODULE_NAME;
    }

    /**
     * @return SimpleShopModule
     */
    protected function _getModule()
    {
        return parent::_getModule(); // TODO: Change the autogenerated stub
    }
}
