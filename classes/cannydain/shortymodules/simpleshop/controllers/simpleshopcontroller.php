<?php

namespace CannyDain\ShortyModules\SimpleShop\Controllers;

use CannyDain\Lib\Routing\Models\Route;
use CannyDain\Lib\UI\Views\RedirectView;
use CannyDain\Shorty\Consumers\BasketHelperConsumer;
use CannyDain\Shorty\Consumers\InvoiceManagerConsumer;
use CannyDain\Shorty\Consumers\PaymentManagerConsumer;
use CannyDain\Shorty\Consumers\SessionConsumer;
use CannyDain\Shorty\Controllers\ShortyModuleController;
use CannyDain\Shorty\ECommerce\Basket\BasketHelperInterface;
use CannyDain\Shorty\Finance\InvoiceManager;
use CannyDain\Shorty\Finance\PaymentManager;
use CannyDain\Shorty\Helpers\SessionHelper;
use CannyDain\ShortyModules\SimpleShop\SimpleShopModule;
use CannyDain\ShortyModules\SimpleShop\Views\ProductListView;
use CannyDain\ShortyModules\SimpleShop\Views\SingleProductView;

class SimpleShopController extends ShortyModuleController implements PaymentManagerConsumer, InvoiceManagerConsumer, SessionConsumer, BasketHelperConsumer
{
    const SESSION_DATA_INVOICE_ID = 'invoice-id';
    const SIMPLE_SHOP_CONTROLLER = __CLASS__;

    /**
     * @var PaymentManager
     */
    protected $_paymentManager;

    /**
     * @var InvoiceManager
     */
    protected $_invoiceManager;

    /**
     * @var SessionHelper
     */
    protected $_session;

    /**
     * @var BasketHelperInterface
     */
    protected $_basket;

    public function Index()
    {
        $view = new ProductListView();
        $view->setViewProductRouteTemplate(new Route(__CLASS__, 'ViewProduct', array('#id#')));
        $view->setTitle('All Products');
        $view->setProducts($this->_getModule()->getDatasource()->getAllProducts());

        return $view;
    }

    public function ViewProduct($id)
    {
        $view = new SingleProductView();
        $view->setAddToBasketRoute(new Route(__CLASS__, 'AddToBasket', array($id)));
        $view->setProduct($this->_getModule()->getDatasource()->loadProduct($id));

        return $view;
    }

    public function AddToBasket($productID)
    {
        // todo: Turn this into it's own helper (basket helper, return basketView, basketMiniView, addToBasketForm etc)
        $product = $this->_getModule()->getDatasource()->loadProduct($productID);

        $qty = $this->_basket->getQuantityOfGUID($product->getGUID());
        $qty ++;
        $this->_basket->setQuantityOfGUID($product->getGUID(), $qty);

        $uri = $this->_router->getURI($this->_basket->getViewBasketRoute());
        return new RedirectView($uri);
    }

    protected function _getModuleClassname()
    {
        return SimpleShopModule::SIMPLE_SHOP_MODULE_NAME;
    }

    /**
     * @return SimpleShopModule
     */
    protected function _getModule()
    {
        return parent::_getModule(); // TODO: Change the autogenerated stub
    }

    public function consumeInvoiceManager(InvoiceManager $manager)
    {
        $this->_invoiceManager = $manager;
    }

    public function consumePaymentManager(PaymentManager $manager)
    {
        $this->_paymentManager = $manager;
    }

    public function consumeSession(SessionHelper $session)
    {
        $this->_session = $session;
    }

    public function consumeBasketHelper(BasketHelperInterface $helper)
    {
        $this->_basket = $helper;
    }
}
